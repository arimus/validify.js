{"name":"Validify.js","tagline":"JavaScript library for data validation","body":"validify.js\r\n=================\r\nvalidify.js is a JavaScript library for data validation.  \r\n\r\nFeatures:\r\n\r\n - Validators can be invoked using the dynamic methods generated by the framework\r\n - Validation can be performed by specifying the object/value to validate and a constraints JSON object\r\n\r\n\r\nInstall\r\n-------\r\n\r\nNode.js\r\n```\r\nnpm install validify.js\r\n```\r\n\r\nBower\r\n```\r\nbower install\r\n```\r\n\r\nUsage\r\n-----\r\n\r\nNode.js\r\n```javascript\r\nvar validify = require('validify');\r\nvalidify.email('test@example.com') // returns true\r\n```\r\n\r\nBrowser (standalone)\r\n```html\r\n<script src=\"validify.standalone.min.js\"></script>\r\n<script>\r\n  validify.email('test@example.com') // returns true\r\n</script>\r\n```\r\n\r\nBrowser (require.js)\r\n```html\r\n<script src=\"require.js\"></script>\r\n<script>\r\nrequire(['validify.standalone.min'], function(validify) {\r\n  validify.email('test@example.com') // returns true\r\n})\r\n</script>\r\n```\r\n\r\nConstraints\r\n-------------\r\n\r\n###Format\r\n\r\n```javascript\r\n[\r\n  {\r\n    <attribute>: {\r\n       <validator>: <options>\r\n    }\r\n  },\r\n  ...\r\n]\r\n```\r\n**attribute** - name of the object attribute to validate, or \"*\" for simple value\r\n**validator** - the name of the validator to use\r\n**options** - the options to use for the enclosing validator\r\n\r\n###Invoking\r\n\r\n```javascript\r\nvar validify = require('validify');\r\n\r\n// validate(<object>, <constraint(s)>, mode)\r\n\r\n// mode is irrelevant when single constraint passed in\r\nvalidify.validate(testObject, {\r\n  firstName: { present: true }\r\n});\r\n\r\n// mode 'any' - firstName or nickName must be present\r\nvalidify.validate(testObject, [\r\n  { firstName: { present: true } },\r\n  { nickName: { present: true } }\r\n], 'any');\r\n```\r\n\r\nModes:\r\n\r\n**all** (and) - every one of the listed constraints must be true\r\n**any** (or) - at least one of the listed constraints must be true\r\n**one** (xor) - only one of the listed constraints can be true\r\n\r\n###Example 1\r\n\r\nSimple validation of a single field.\r\n\r\n*Object:*\r\n```\r\nid (integer)\r\nfirstName (string)\r\nlastName (string)\r\n```\r\n\r\n*Logic:*\r\n<pre>\r\nfirstName length > 3\r\n</pre>\r\n\r\n*Rule:*\r\n```javascript\r\n{ \r\n  firstName: { \r\n    greaterThan: { min: 3 } \r\n  } \r\n}\r\n```\r\n\r\n###Example 2\r\n\r\nMultiple fields can be validated for a single object.\r\n\r\n*Object:*\r\n```\r\nid (integer)\r\nfirstName (string)\r\nlastName (string)\r\n```\r\n\r\n*Logic:*\r\n<pre>\r\nid must be present\r\nfirstName present && length > 3\r\n</pre>\r\n\r\n*Rule:*\r\n```javascript\r\n[\r\n  { \r\n    id: { \r\n      present: false \r\n    } \r\n  },\r\n  { \r\n    firstName: { \r\n      present: true, \r\n      length: { min: 0, max: 10, inclusive: false}\r\n    }\r\n  }\r\n]\r\n```\r\n\r\n###Example 3\r\n\r\nSimple logic can be performed through use of validation operators.\r\n\r\n*Object:*\r\n```\r\nid (integer)\r\ninteger (integer)\r\nfloat (float)\r\nisFloat (boolean)\r\n```\r\n\r\n*Logic:*\r\n<pre>\r\nif isFloat == true then\r\n  float must be present && integer must be missing\r\nelse\r\n  float must be missing && integer must be present\r\nfi\r\n</pre>\r\n\r\n*Rule:*\r\n```javascript\r\n[\r\n  {\r\n    isFloat: {\r\n      eq: true\r\n    },\r\n    integer: {\r\n      present: false\r\n    },\r\n    float: {\r\n      present: true\r\n    }\r\n  },\r\n  {\r\n    isFloat: {\r\n      eq: true\r\n    },\r\n    integer: {\r\n      present: false\r\n    },\r\n    float: {\r\n      present: true\r\n    }\r\n  }\r\n]\r\n```\r\n\r\n###Example 4\r\n\r\nUnwrap arrays to apply validation to each object in turn\r\n\r\n*Object:*\r\n```\r\nid (integer)\r\nname (string)\r\nlist ([{\r\n  name:\r\n  field1: true\r\n}, {\r\n  field1: false\r\n}])\r\n```\r\n\r\n*Logic:*\r\n<pre>\r\nlist.field1 == true\r\n</pre>\r\n\r\n*Rule:*\r\n```javascript\r\n[\r\n  {\r\n    isFloat: {\r\n      eq: true\r\n    },\r\n    integer: {\r\n      present: false\r\n    },\r\n    float: {\r\n      present: true\r\n    }\r\n  },\r\n  {\r\n    isFloat: {\r\n      eq: true\r\n    },\r\n    integer: {\r\n      present: false\r\n    },\r\n    float: {\r\n      present: true\r\n    }\r\n  }\r\n]\r\n```\r\n\r\nLicense\r\n-------\r\n\r\nThe MIT License (MIT), Copyright (c) 2014 David Castro <arimus@gmail.com>\r\n\r\nSee LICENSE file for details","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}